; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\hub\cubemac\ref\ch3.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	@permute@4
; Function compile flags: /Ogspy
;	COMDAT @permute@4
_TEXT	SEGMENT
_y$ = -84						; size = 64
tv383 = -20						; size = 4
_n$ = -16						; size = 4
_j$ = -12						; size = 4
_k$ = -8						; size = 4
tv692 = -4						; size = 4
@permute@4 PROC						; COMDAT
; _c$ = ecx
; File c:\hub\cubemac\ref\ch3.c
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	edx, ecx
; Line 38
	lea	eax, DWORD PTR _y$[ebp]
	sub	eax, edx
	push	4
	mov	DWORD PTR _n$[ebp], 16			; 00000010H
	mov	DWORD PTR tv383[ebp], eax
	pop	edi
$LL43@:
; Line 40
	mov	DWORD PTR _k$[ebp], 7
	mov	DWORD PTR _j$[ebp], 2
	mov	DWORD PTR tv692[ebp], 8
$LL44@:
; Line 42
	push	15					; 0000000fH
	pop	esi
	lea	eax, DWORD PTR [edx+124]
$LL18@:
	mov	ecx, DWORD PTR [eax-64]
	add	DWORD PTR [eax], ecx
	sub	eax, edi
	dec	esi
	jns	SHORT $LL18@
; Line 43
	push	15					; 0000000fH
	pop	eax
$LL15@:
	mov	ecx, DWORD PTR tv692[ebp]
	mov	esi, DWORD PTR [edx+eax*4]
	xor	ecx, eax
	dec	eax
	mov	DWORD PTR _y$[ebp+ecx*4], esi
	jns	SHORT $LL15@
; Line 44
	push	15					; 0000000fH
	pop	esi
	lea	eax, DWORD PTR [edx+60]
$LL45@:
	mov	ecx, DWORD PTR tv383[ebp]
	mov	ebx, DWORD PTR [ecx+eax]
	mov	ecx, DWORD PTR _k$[ebp]
	rol	ebx, cl
	mov	DWORD PTR [eax], ebx
	sub	eax, edi
	dec	esi
	jns	SHORT $LL45@
; Line 46
	push	15					; 0000000fH
	pop	esi
$LL9@:
	mov	ecx, DWORD PTR [edx+esi*4+64]
	lea	eax, DWORD PTR [edx+esi*4]
	xor	DWORD PTR [eax], ecx
	dec	esi
	jns	SHORT $LL9@
; Line 47
	push	15					; 0000000fH
	pop	esi
	lea	eax, DWORD PTR [edx+124]
$LL6@:
	mov	ebx, DWORD PTR [eax]
	mov	ecx, esi
	xor	ecx, DWORD PTR _j$[ebp]
	sub	eax, edi
	dec	esi
	mov	DWORD PTR _y$[ebp+ecx*4], ebx
	jns	SHORT $LL6@
; Line 48
	push	15					; 0000000fH
	pop	eax
	lea	esi, DWORD PTR [edx+124]
$LL3@:
	mov	ecx, DWORD PTR _y$[ebp+eax*4]
	mov	DWORD PTR [esi], ecx
	sub	esi, edi
	dec	eax
	jns	SHORT $LL3@
; Line 40
	add	DWORD PTR _k$[ebp], edi
	sub	DWORD PTR tv692[ebp], edi
	dec	DWORD PTR _j$[ebp]
	cmp	DWORD PTR tv692[ebp], 0
	jg	SHORT $LL44@
; Line 38
	dec	DWORD PTR _n$[ebp]
	cmp	DWORD PTR _n$[ebp], 0
	jg	$LL43@
	pop	edi
	pop	esi
	pop	ebx
; Line 51
	leave
	ret	0
@permute@4 ENDP
_TEXT	ENDS
PUBLIC	@cube_setkey@8
; Function compile flags: /Ogspy
;	COMDAT @cube_setkey@8
_TEXT	SEGMENT
@cube_setkey@8 PROC					; COMDAT
; _c$ = ecx
; _mkey$ = edx
; Line 54
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 58
	xor	al, al
	mov	edi, esi
	mov	ecx, 128				; 00000080H
	rep stosb
; Line 60
	push	16					; 00000010H
	pop	eax
; Line 64
	mov	ecx, esi
	mov	ebx, edx
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], 32			; 00000020H
	mov	DWORD PTR [esi+8], eax
	call	@permute@4
	push	2
	pop	edi
$LL6@:
; Line 70
	xor	eax, eax
$LL3@:
; Line 71
	mov	ecx, DWORD PTR [ebx]
	xor	DWORD PTR [esi+eax*4], ecx
	add	ebx, 4
	inc	eax
	cmp	eax, 8
	jl	SHORT $LL3@
; Line 73
	mov	ecx, esi
	call	@permute@4
	dec	edi
	jne	SHORT $LL6@
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	ret	0
@cube_setkey@8 ENDP
_TEXT	ENDS
PUBLIC	@cube_mac@16
; Function compile flags: /Ogspy
;	COMDAT @cube_mac@16
_TEXT	SEGMENT
_len$ = 8						; size = 4
_out$ = 12						; size = 4
@cube_mac@16 PROC					; COMDAT
; _c$ = ecx
; _in$ = edx
; Line 79
	push	ebx
	push	esi
	push	edi
; Line 80
	xor	edi, edi
	xor	eax, eax
	mov	ebx, edx
	mov	esi, ecx
; Line 83
	cmp	DWORD PTR _len$[esp+8], edi
	jbe	SHORT $LN5@
$LL7@:
; Line 84
	mov	cl, BYTE PTR [edi+ebx]
	xor	BYTE PTR [eax+esi], cl
	inc	eax
; Line 85
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN6@
; Line 86
	mov	ecx, esi
	call	@permute@4
; Line 87
	xor	eax, eax
$LN6@:
; Line 83
	inc	edi
	cmp	edi, DWORD PTR _len$[esp+8]
	jb	SHORT $LL7@
$LN5@:
; Line 91
	xor	BYTE PTR [eax+esi], 128			; 00000080H
; Line 92
	mov	ecx, esi
	call	@permute@4
; Line 95
	xor	DWORD PTR [esi+124], 1
	push	2
	pop	edi
$LL3@:
; Line 98
	mov	ecx, esi
	call	@permute@4
	dec	edi
	jne	SHORT $LL3@
; Line 102
	mov	edi, DWORD PTR _out$[esp+8]
	movsd
	movsd
	movsd
	movsd
	pop	edi
	pop	esi
	pop	ebx
; Line 103
	ret	8
@cube_mac@16 ENDP
_TEXT	ENDS
END
