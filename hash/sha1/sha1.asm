; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\odzhan\tinycrypt\hash\sha1\sha1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_SHA1_Transform
; Function compile flags: /Ogspy
;	COMDAT _SHA1_Transform
_TEXT	SEGMENT
_w$ = -340						; size = 320
_s$ = -20						; size = 20
_ctx$ = 8						; size = 4
_SHA1_Transform PROC					; COMDAT
; File c:\odzhan\tinycrypt\hash\sha1\sha1.c
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	push	esi
; Line 43
	mov	esi, DWORD PTR _ctx$[ebp]
	xor	ecx, ecx
	lea	eax, DWORD PTR [esi+20]
$LL18@SHA1_Trans:
; Line 44
	mov	edx, DWORD PTR [eax]
	bswap	edx
	mov	DWORD PTR _w$[ebp+ecx*4], edx
	inc	ecx
	add	eax, 4
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LL18@SHA1_Trans
; Line 48
	push	64					; 00000040H
	lea	eax, DWORD PTR _w$[ebp+8]
	pop	ecx
$LL15@SHA1_Trans:
; Line 52
	mov	edx, DWORD PTR [eax+44]
	xor	edx, DWORD PTR [eax+24]
	xor	edx, DWORD PTR [eax-8]
	xor	edx, DWORD PTR [eax]
	add	eax, 4
	dec	ecx
	rol	edx, 1
	mov	DWORD PTR [eax+52], edx
	jne	SHORT $LL15@SHA1_Trans
; Line 56
	push	ebx
	push	edi
	push	20					; 00000014H
	lea	edi, DWORD PTR _s$[ebp]
	pop	ecx
	rep movsb
; Line 59
	mov	ecx, DWORD PTR _s$[ebp+12]
	mov	edx, DWORD PTR _s$[ebp+8]
	mov	esi, DWORD PTR _s$[ebp+4]
	xor	edi, edi
$LL29@SHA1_Trans:
; Line 61
	mov	eax, edx
	cmp	edi, 20					; 00000014H
	jae	SHORT $LN9@SHA1_Trans
	xor	eax, ecx
	and	eax, esi
	xor	eax, ecx
	add	eax, 1518500249				; 5a827999H
	jmp	SHORT $LN4@SHA1_Trans
$LN9@SHA1_Trans:
; Line 62
	cmp	edi, 40					; 00000028H
	jae	SHORT $LN7@SHA1_Trans
; Line 63
	xor	eax, esi
	xor	eax, ecx
	add	eax, 1859775393				; 6ed9eba1H
	jmp	SHORT $LN4@SHA1_Trans
$LN7@SHA1_Trans:
; Line 64
	cmp	edi, 60					; 0000003cH
	jae	SHORT $LN5@SHA1_Trans
; Line 65
	or	eax, esi
	mov	ebx, edx
	and	eax, ecx
	and	ebx, esi
	or	eax, ebx
	sub	eax, 1894007588				; 70e44324H
; Line 66
	jmp	SHORT $LN4@SHA1_Trans
$LN5@SHA1_Trans:
; Line 67
	xor	eax, esi
	xor	eax, ecx
	sub	eax, 899497514				; 359d3e2aH
$LN4@SHA1_Trans:
; Line 69
	mov	ebx, DWORD PTR _s$[ebp]
	rol	ebx, 5
	add	ebx, DWORD PTR _w$[ebp+edi*4]
	add	ebx, DWORD PTR _s$[ebp+16]
; Line 70
	mov	DWORD PTR _s$[ebp+16], ecx
	add	eax, ebx
; Line 72
	ror	esi, 2
	mov	ecx, edx
	inc	edi
	mov	edx, esi
; Line 73
	mov	esi, DWORD PTR _s$[ebp]
; Line 74
	mov	DWORD PTR _s$[ebp], eax
	cmp	edi, 80					; 00000050H
	jb	SHORT $LL29@SHA1_Trans
; Line 78
	mov	eax, DWORD PTR _ctx$[ebp]
	push	5
	mov	DWORD PTR _s$[ebp+8], edx
	pop	edx
	mov	DWORD PTR _s$[ebp+12], ecx
	lea	ecx, DWORD PTR _s$[ebp]
	pop	edi
	mov	DWORD PTR _s$[ebp+4], esi
	sub	ecx, eax
	pop	ebx
$LL3@SHA1_Trans:
; Line 79
	mov	esi, DWORD PTR [ecx+eax]
	add	DWORD PTR [eax], esi
	add	eax, 4
	dec	edx
	jne	SHORT $LL3@SHA1_Trans
	pop	esi
; Line 81
	leave
	ret	0
_SHA1_Transform ENDP
_TEXT	ENDS
PUBLIC	_SHA1_Init
; Function compile flags: /Ogspy
;	COMDAT _SHA1_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SHA1_Init PROC						; COMDAT
; Line 89
	mov	eax, DWORD PTR _c$[esp-4]
	and	DWORD PTR [eax+84], 0
	and	DWORD PTR [eax+88], 0
; Line 90
	mov	DWORD PTR [eax], 1732584193		; 67452301H
; Line 91
	mov	DWORD PTR [eax+4], -271733879		; efcdab89H
; Line 92
	mov	DWORD PTR [eax+8], -1732584194		; 98badcfeH
; Line 93
	mov	DWORD PTR [eax+12], 271733878		; 10325476H
; Line 94
	mov	DWORD PTR [eax+16], -1009589776		; c3d2e1f0H
; Line 95
	ret	0
_SHA1_Init ENDP
_TEXT	ENDS
PUBLIC	_SHA1_Update
; Function compile flags: /Ogspy
;	COMDAT _SHA1_Update
_TEXT	SEGMENT
_p$ = -4						; size = 4
_c$ = 8							; size = 4
_r$ = 12						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_SHA1_Update PROC					; COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 106
	mov	ecx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _p$[ebp], eax
	test	ecx, ecx
	je	SHORT $LN10@SHA1_Updat
; Line 109
	push	ebx
	mov	ebx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [ebx+84]
	and	eax, 63					; 0000003fH
; Line 112
	add	DWORD PTR [ebx+84], ecx
	adc	DWORD PTR [ebx+88], 0
; Line 114
	test	ecx, ecx
	je	SHORT $LN13@SHA1_Updat
	push	esi
	push	edi
	jmp	SHORT $LN3@SHA1_Updat
$LL12@SHA1_Updat:
	mov	ecx, DWORD PTR _len$[ebp]
$LN3@SHA1_Updat:
; Line 115
	push	64					; 00000040H
	pop	edx
	sub	edx, eax
	mov	DWORD PTR _r$[ebp], ecx
	cmp	ecx, edx
	jb	SHORT $LN8@SHA1_Updat
	mov	DWORD PTR _r$[ebp], edx
$LN8@SHA1_Updat:
; Line 116
	mov	edx, DWORD PTR _r$[ebp]
	mov	esi, DWORD PTR _p$[ebp]
	mov	ecx, edx
; Line 117
	add	edx, eax
	lea	edi, DWORD PTR [ebx+eax+20]
	rep movsb
	cmp	edx, 64					; 00000040H
	jb	SHORT $LN14@SHA1_Updat
; Line 119
	push	ebx
	call	_SHA1_Transform
	pop	ecx
; Line 120
	mov	ecx, DWORD PTR _r$[ebp]
	sub	DWORD PTR _len$[ebp], ecx
; Line 122
	add	DWORD PTR _p$[ebp], ecx
	xor	eax, eax
	cmp	DWORD PTR _len$[ebp], eax
	ja	SHORT $LL12@SHA1_Updat
$LN14@SHA1_Updat:
	pop	edi
	pop	esi
$LN13@SHA1_Updat:
	pop	ebx
$LN10@SHA1_Updat:
; Line 124
	leave
	ret	0
_SHA1_Update ENDP
_TEXT	ENDS
PUBLIC	_SHA1_Final
; Function compile flags: /Ogspy
;	COMDAT _SHA1_Final
_TEXT	SEGMENT
_dgst$ = 8						; size = 4
_c$ = 12						; size = 4
_SHA1_Final PROC					; COMDAT
; Line 132
	push	esi
; Line 136
	mov	esi, DWORD PTR _c$[esp]
	mov	edx, DWORD PTR [esi+84]
	push	edi
	and	edx, 63					; 0000003fH
; Line 139
	mov	BYTE PTR [edx+esi+20], 128		; 00000080H
	inc	edx
; Line 142
	push	64					; 00000040H
	pop	ecx
	sub	ecx, edx
	xor	al, al
	lea	edi, DWORD PTR [edx+esi+20]
	rep stosb
; Line 145
	cmp	edx, 56					; 00000038H
	jb	SHORT $LN4@SHA1_Final
; Line 146
	push	esi
	call	_SHA1_Transform
	pop	ecx
; Line 148
	push	64					; 00000040H
	lea	edi, DWORD PTR [esi+20]
	xor	al, al
	pop	ecx
	rep stosb
$LN4@SHA1_Final:
; Line 151
	mov	eax, DWORD PTR [esi+84]
	mov	ecx, DWORD PTR [esi+88]
	shld	ecx, eax, 3
	shl	eax, 3
	bswap	eax
	bswap	ecx
; Line 154
	push	esi
	mov	DWORD PTR [esi+76], ecx
	mov	DWORD PTR [esi+80], eax
	call	_SHA1_Transform
	pop	ecx
; Line 157
	xor	eax, eax
$LL3@SHA1_Final:
; Line 158
	mov	ecx, DWORD PTR [esi+eax*4]
	bswap	ecx
	mov	DWORD PTR [esi+eax*4], ecx
	inc	eax
	cmp	eax, 5
	jb	SHORT $LL3@SHA1_Final
; Line 161
	mov	edi, DWORD PTR _dgst$[esp+4]
	push	20					; 00000014H
	pop	ecx
	rep movsb
	pop	edi
	pop	esi
; Line 162
	ret	0
_SHA1_Final ENDP
_TEXT	ENDS
END
