; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	c:\odzhan\tinycrypt\hash\sha2\sha256.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_SHA256_Transform
; Function compile flags: /Ogspy
;	COMDAT _SHA256_Transform
_TEXT	SEGMENT
_w$ = -548						; size = 256
_k$ = -292						; size = 256
_s$ = -36						; size = 32
tv998 = -4						; size = 4
tv468 = -4						; size = 4
_c$ = 8							; size = 4
_SHA256_Transform PROC					; COMDAT
; File c:\odzhan\tinycrypt\hash\sha2\sha256.c
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 548				; 00000224H
	push	ebx
	push	esi
; Line 81
	mov	esi, DWORD PTR _c$[ebp]
	push	edi
	mov	DWORD PTR _k$[ebp], 1116352408		; 428a2f98H
	mov	DWORD PTR _k$[ebp+4], 1899447441	; 71374491H
	mov	DWORD PTR _k$[ebp+8], -1245643825	; b5c0fbcfH
	mov	DWORD PTR _k$[ebp+12], -373957723	; e9b5dba5H
; Line 82
	mov	DWORD PTR _k$[ebp+16], 961987163	; 3956c25bH
	mov	DWORD PTR _k$[ebp+20], 1508970993	; 59f111f1H
	mov	DWORD PTR _k$[ebp+24], -1841331548	; 923f82a4H
	mov	DWORD PTR _k$[ebp+28], -1424204075	; ab1c5ed5H
; Line 83
	mov	DWORD PTR _k$[ebp+32], -670586216	; d807aa98H
	mov	DWORD PTR _k$[ebp+36], 310598401	; 12835b01H
	mov	DWORD PTR _k$[ebp+40], 607225278	; 243185beH
	mov	DWORD PTR _k$[ebp+44], 1426881987	; 550c7dc3H
; Line 84
	mov	DWORD PTR _k$[ebp+48], 1925078388	; 72be5d74H
	mov	DWORD PTR _k$[ebp+52], -2132889090	; 80deb1feH
	mov	DWORD PTR _k$[ebp+56], -1680079193	; 9bdc06a7H
	mov	DWORD PTR _k$[ebp+60], -1046744716	; c19bf174H
; Line 85
	mov	DWORD PTR _k$[ebp+64], -459576895	; e49b69c1H
	mov	DWORD PTR _k$[ebp+68], -272742522	; efbe4786H
	mov	DWORD PTR _k$[ebp+72], 264347078	; 0fc19dc6H
	mov	DWORD PTR _k$[ebp+76], 604807628	; 240ca1ccH
; Line 86
	mov	DWORD PTR _k$[ebp+80], 770255983	; 2de92c6fH
	mov	DWORD PTR _k$[ebp+84], 1249150122	; 4a7484aaH
	mov	DWORD PTR _k$[ebp+88], 1555081692	; 5cb0a9dcH
	mov	DWORD PTR _k$[ebp+92], 1996064986	; 76f988daH
; Line 87
	mov	DWORD PTR _k$[ebp+96], -1740746414	; 983e5152H
	mov	DWORD PTR _k$[ebp+100], -1473132947	; a831c66dH
	mov	DWORD PTR _k$[ebp+104], -1341970488	; b00327c8H
	mov	DWORD PTR _k$[ebp+108], -1084653625	; bf597fc7H
; Line 88
	mov	DWORD PTR _k$[ebp+112], -958395405	; c6e00bf3H
	mov	DWORD PTR _k$[ebp+116], -710438585	; d5a79147H
	mov	DWORD PTR _k$[ebp+120], 113926993	; 06ca6351H
	mov	DWORD PTR _k$[ebp+124], 338241895	; 14292967H
; Line 89
	mov	DWORD PTR _k$[ebp+128], 666307205	; 27b70a85H
	mov	DWORD PTR _k$[ebp+132], 773529912	; 2e1b2138H
	mov	DWORD PTR _k$[ebp+136], 1294757372	; 4d2c6dfcH
	mov	DWORD PTR _k$[ebp+140], 1396182291	; 53380d13H
; Line 90
	mov	DWORD PTR _k$[ebp+144], 1695183700	; 650a7354H
	mov	DWORD PTR _k$[ebp+148], 1986661051	; 766a0abbH
	mov	DWORD PTR _k$[ebp+152], -2117940946	; 81c2c92eH
	mov	DWORD PTR _k$[ebp+156], -1838011259	; 92722c85H
; Line 91
	mov	DWORD PTR _k$[ebp+160], -1564481375	; a2bfe8a1H
	mov	DWORD PTR _k$[ebp+164], -1474664885	; a81a664bH
	mov	DWORD PTR _k$[ebp+168], -1035236496	; c24b8b70H
	mov	DWORD PTR _k$[ebp+172], -949202525	; c76c51a3H
; Line 92
	mov	DWORD PTR _k$[ebp+176], -778901479	; d192e819H
	mov	DWORD PTR _k$[ebp+180], -694614492	; d6990624H
	mov	DWORD PTR _k$[ebp+184], -200395387	; f40e3585H
	mov	DWORD PTR _k$[ebp+188], 275423344	; 106aa070H
; Line 93
	mov	DWORD PTR _k$[ebp+192], 430227734	; 19a4c116H
	mov	DWORD PTR _k$[ebp+196], 506948616	; 1e376c08H
	mov	DWORD PTR _k$[ebp+200], 659060556	; 2748774cH
	mov	DWORD PTR _k$[ebp+204], 883997877	; 34b0bcb5H
; Line 94
	mov	DWORD PTR _k$[ebp+208], 958139571	; 391c0cb3H
	mov	DWORD PTR _k$[ebp+212], 1322822218	; 4ed8aa4aH
	mov	DWORD PTR _k$[ebp+216], 1537002063	; 5b9cca4fH
	mov	DWORD PTR _k$[ebp+220], 1747873779	; 682e6ff3H
; Line 95
	mov	DWORD PTR _k$[ebp+224], 1955562222	; 748f82eeH
	mov	DWORD PTR _k$[ebp+228], 2024104815	; 78a5636fH
	mov	DWORD PTR _k$[ebp+232], -2067236844	; 84c87814H
	mov	DWORD PTR _k$[ebp+236], -1933114872	; 8cc70208H
; Line 96
	mov	DWORD PTR _k$[ebp+240], -1866530822	; 90befffaH
	mov	DWORD PTR _k$[ebp+244], -1538233109	; a4506cebH
	mov	DWORD PTR _k$[ebp+248], -1090935817	; bef9a3f7H
	mov	DWORD PTR _k$[ebp+252], -965641998	; c67178f2H
; Line 99
	xor	ecx, ecx
	lea	eax, DWORD PTR [esi+40]
$LL18@SHA256_Tra:
; Line 100
	mov	edx, DWORD PTR [eax]
	bswap	edx
	mov	DWORD PTR _w$[ebp+ecx*4], edx
	inc	ecx
	add	eax, 4
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LL18@SHA256_Tra
; Line 104
	lea	eax, DWORD PTR _w$[ebp+56]
	mov	DWORD PTR tv468[ebp], 48		; 00000030H
$LL15@SHA256_Tra:
; Line 105
	mov	ecx, DWORD PTR [eax-52]
	mov	edx, DWORD PTR [eax]
	mov	edi, ecx
	ror	edi, 18					; 00000012H
	mov	ebx, ecx
	shr	ecx, 3
	ror	ebx, 7
	xor	edi, ebx
	xor	edi, ecx
	mov	ecx, edx
	ror	ecx, 19					; 00000013H
	mov	ebx, edx
	ror	ebx, 17					; 00000011H
	xor	ecx, ebx
	shr	edx, 10					; 0000000aH
	xor	ecx, edx
	add	edi, ecx
	add	edi, DWORD PTR [eax-56]
	add	eax, 4
	add	edi, DWORD PTR [eax-24]
	dec	DWORD PTR tv468[ebp]
	mov	DWORD PTR [eax+4], edi
	jne	SHORT $LL15@SHA256_Tra
; Line 109
	add	esi, 8
; Line 110
	push	8
	mov	DWORD PTR tv998[ebp], esi
	pop	ecx
	lea	edi, DWORD PTR _s$[ebp]
	rep movsd
; Line 114
	mov	esi, DWORD PTR _s$[ebp]
	xor	edx, edx
$LL9@SHA256_Tra:
; Line 116
	mov	ecx, DWORD PTR _s$[ebp+16]
	mov	ebx, DWORD PTR _s$[ebp+20]
	mov	eax, ecx
	ror	eax, 25					; 00000019H
	mov	edi, ecx
	ror	edi, 11					; 0000000bH
	xor	eax, edi
	mov	edi, ecx
	ror	edi, 6
	xor	eax, edi
	and	ebx, ecx
	mov	edi, ecx
	not	edi
	and	edi, DWORD PTR _s$[ebp+24]
; Line 122
	mov	ecx, esi
	xor	edi, ebx
	add	eax, edi
	add	eax, DWORD PTR _k$[ebp+edx]
	mov	edi, esi
	add	eax, DWORD PTR _w$[ebp+edx]
	add	eax, DWORD PTR _s$[ebp+28]
	ror	edi, 22					; 00000016H
; Line 124
	add	DWORD PTR _s$[ebp+12], eax
	ror	ecx, 13					; 0000000dH
	xor	edi, ecx
	mov	ecx, esi
	ror	ecx, 2
	xor	edi, ecx
	mov	ecx, DWORD PTR _s$[ebp+4]
	mov	ebx, ecx
	xor	ebx, esi
	and	ebx, DWORD PTR _s$[ebp+8]
	and	ecx, esi
	xor	ebx, ecx
	add	edi, eax
	add	ebx, edi
; Line 127
	xor	ecx, ecx
	mov	DWORD PTR _s$[ebp+28], ebx
	inc	ecx
$LL6@SHA256_Tra:
	lea	eax, DWORD PTR _s$[ebp+ecx*4]
; Line 128
	mov	edi, DWORD PTR [eax]
	inc	ecx
; Line 129
	mov	DWORD PTR [eax], esi
; Line 130
	mov	esi, edi
	cmp	ecx, 8
	jb	SHORT $LL6@SHA256_Tra
; Line 132
	add	edx, 4
	mov	DWORD PTR _s$[ebp], esi
	cmp	edx, 256				; 00000100H
	jb	$LL9@SHA256_Tra
; Line 136
	mov	eax, DWORD PTR tv998[ebp]
	pop	edi
	pop	esi
	xor	ecx, ecx
	pop	ebx
$LL3@SHA256_Tra:
; Line 137
	mov	edx, DWORD PTR _s$[ebp+ecx*4]
	add	DWORD PTR [eax], edx
	inc	ecx
	add	eax, 4
	cmp	ecx, 8
	jb	SHORT $LL3@SHA256_Tra
; Line 139
	leave
	ret	0
_SHA256_Transform ENDP
_TEXT	ENDS
PUBLIC	_SHA256_Init
; Function compile flags: /Ogspy
;	COMDAT _SHA256_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SHA256_Init PROC					; COMDAT
; Line 154
	mov	eax, DWORD PTR _c$[esp-4]
; Line 163
	and	DWORD PTR [eax], 0
	and	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 1779033703		; 6a09e667H
	mov	DWORD PTR [eax+12], -1150833019		; bb67ae85H
	mov	DWORD PTR [eax+16], 1013904242		; 3c6ef372H
	mov	DWORD PTR [eax+20], -1521486534		; a54ff53aH
	mov	DWORD PTR [eax+24], 1359893119		; 510e527fH
	mov	DWORD PTR [eax+28], -1694144372		; 9b05688cH
	mov	DWORD PTR [eax+32], 528734635		; 1f83d9abH
	mov	DWORD PTR [eax+36], 1541459225		; 5be0cd19H
; Line 164
	ret	0
_SHA256_Init ENDP
_TEXT	ENDS
PUBLIC	_SHA256_Update
; Function compile flags: /Ogspy
;	COMDAT _SHA256_Update
_TEXT	SEGMENT
_p$ = -4						; size = 4
_c$ = 8							; size = 4
_r$ = 12						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_SHA256_Update PROC					; COMDAT
; Line 171
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 172
	mov	eax, DWORD PTR _in$[ebp]
; Line 179
	mov	ecx, DWORD PTR _len$[ebp]
	push	ebx
	mov	ebx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _p$[ebp], eax
	mov	eax, DWORD PTR [ebx]
	and	eax, 63					; 0000003fH
	add	DWORD PTR [ebx], ecx
	adc	DWORD PTR [ebx+4], 0
; Line 181
	test	ecx, ecx
	je	SHORT $LN9@SHA256_Upd
	push	esi
	push	edi
$LL3@SHA256_Upd:
; Line 182
	mov	edx, DWORD PTR _len$[ebp]
	push	64					; 00000040H
	pop	ecx
	sub	ecx, eax
	mov	DWORD PTR _r$[ebp], edx
	cmp	edx, ecx
	jb	SHORT $LN7@SHA256_Upd
	mov	DWORD PTR _r$[ebp], ecx
$LN7@SHA256_Upd:
; Line 183
	mov	edx, DWORD PTR _r$[ebp]
	mov	esi, DWORD PTR _p$[ebp]
	mov	ecx, edx
; Line 184
	add	edx, eax
	lea	edi, DWORD PTR [ebx+eax+40]
	rep movsb
	cmp	edx, 64					; 00000040H
	jb	SHORT $LN12@SHA256_Upd
; Line 186
	push	ebx
	call	_SHA256_Transform
	pop	ecx
; Line 187
	mov	ecx, DWORD PTR _r$[ebp]
	sub	DWORD PTR _len$[ebp], ecx
; Line 189
	add	DWORD PTR _p$[ebp], ecx
	xor	eax, eax
	cmp	DWORD PTR _len$[ebp], eax
	jne	SHORT $LL3@SHA256_Upd
$LN12@SHA256_Upd:
	pop	edi
	pop	esi
$LN9@SHA256_Upd:
	pop	ebx
; Line 191
	leave
	ret	0
_SHA256_Update ENDP
_TEXT	ENDS
PUBLIC	_SHA256_Final
; Function compile flags: /Ogspy
;	COMDAT _SHA256_Final
_TEXT	SEGMENT
tv193 = -8						; size = 8
_dgst$ = 8						; size = 4
tv167 = 12						; size = 4
_c$ = 12						; size = 4
_SHA256_Final PROC					; COMDAT
; Line 199
	push	ecx
	push	ecx
	push	ebx
	push	ebp
	push	esi
; Line 203
	mov	esi, DWORD PTR _c$[esp+16]
	mov	edx, DWORD PTR [esi]
	push	edi
	and	edx, 63					; 0000003fH
; Line 205
	push	64					; 00000040H
	lea	ebx, DWORD PTR [edx+esi+40]
	pop	ecx
	sub	ecx, edx
	xor	al, al
	xor	ebp, ebp
	mov	edi, ebx
	rep stosb
; Line 207
	mov	BYTE PTR [ebx], 128			; 00000080H
; Line 209
	jne	SHORT $LN9@SHA256_Fin
	cmp	edx, 56					; 00000038H
	jb	SHORT $LN4@SHA256_Fin
$LN9@SHA256_Fin:
; Line 210
	push	esi
	call	_SHA256_Transform
	pop	ecx
; Line 212
	push	64					; 00000040H
	lea	edi, DWORD PTR [esi+40]
	xor	al, al
	pop	ecx
	rep stosb
$LN4@SHA256_Fin:
; Line 215
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR tv193[esp+24], ecx
	mov	DWORD PTR tv193[esp+28], eax
	shld	eax, ecx, 3
	shl	ecx, 3
	mov	ebx, ecx
	mov	ebp, eax
	shrd	ebx, ebp, 16
	shr	ebp, 16					; 00000010H
	xor	edx, edx
	or	edx, ebx
	mov	edi, eax
	and	edi, 16711680				; 00ff0000H
	or	edi, ebp
	shrd	edx, edi, 16
	xor	ebx, ebx
	or	edx, ebx
	mov	ebx, DWORD PTR tv193[esp+24]
	shrd	ecx, eax, 8
	mov	ebp, eax
	and	ebp, 65280				; 0000ff00H
	shr	edi, 16					; 00000010H
	or	edi, ebp
	shrd	edx, edi, 24
	shl	ebx, 27					; 0000001bH
	shr	eax, 8
	or	ebx, eax
	xor	ebp, ebp
	or	ebp, ecx
	mov	eax, -16777216				; ff000000H
	and	ebx, eax
	and	ebp, eax
	mov	eax, DWORD PTR tv193[esp+24]
	shr	edi, 24					; 00000018H
	or	edi, ebx
	or	edx, ebp
	mov	ebx, eax
	shl	ebx, 11					; 0000000bH
	mov	ecx, 16711680				; 00ff0000H
	and	ebx, ecx
	or	edi, ebx
	mov	ebx, DWORD PTR tv193[esp+28]
	xor	ebp, ebp
	and	ebp, ecx
	mov	ecx, eax
	shld	ebx, ecx, 27
	shl	ecx, 27					; 0000001bH
	or	edx, ebp
	mov	ebp, ecx
	mov	ecx, 65280				; 0000ff00H
	and	ebx, ecx
	and	ebp, ecx
	mov	ecx, DWORD PTR tv193[esp+28]
	shld	ecx, eax, 11
	shl	eax, 11					; 0000000bH
	or	edi, ebx
	mov	ebx, ecx
	mov	ecx, eax
	mov	eax, 255				; 000000ffH
	or	edx, ebp
	and	ecx, eax
	and	ebx, eax
	or	edx, ecx
	or	edi, ebx
; Line 217
	push	esi
	mov	DWORD PTR [esi+96], edx
	mov	DWORD PTR [esi+100], edi
	call	_SHA256_Transform
	pop	ecx
	add	esi, 8
	push	8
	mov	eax, esi
	pop	ecx
$LL3@SHA256_Fin:
; Line 221
	mov	edx, DWORD PTR [eax]
	bswap	edx
	mov	DWORD PTR [eax], edx
	add	eax, 4
	dec	ecx
	jne	SHORT $LL3@SHA256_Fin
; Line 224
	mov	edi, DWORD PTR _dgst$[esp+20]
	push	32					; 00000020H
	pop	ecx
	rep movsb
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 225
	pop	ecx
	pop	ecx
	ret	0
_SHA256_Final ENDP
_TEXT	ENDS
END
