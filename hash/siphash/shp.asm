; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\odzhan\tinycrypt\hash\siphash\shp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_shp
; Function compile flags: /Ogspy
;	COMDAT _shp
_TEXT	SEGMENT
_in$ = -4						; size = 4
tv403 = 8						; size = 4
_data$ = 8						; size = 4
_b$ = 12						; size = 4
_inlen$ = 12						; size = 4
_left$ = 16						; size = 4
_key$ = 16						; size = 4
_shp	PROC						; COMDAT
; File c:\odzhan\tinycrypt\hash\siphash\shp.c
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 59
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	push	ebx
	push	esi
; Line 60
	mov	esi, DWORD PTR [eax+4]
	push	edi
	mov	edi, DWORD PTR [eax]
; Line 64
	mov	eax, DWORD PTR _inlen$[ebp]
	mov	edx, eax
	and	edx, 3
	mov	DWORD PTR _in$[ebp], ecx
	sub	ecx, edx
	add	ecx, eax
; Line 66
	shl	eax, 24					; 00000018H
	mov	DWORD PTR _left$[ebp], edx
	mov	DWORD PTR _b$[ebp], eax
; Line 68
	mov	eax, esi
; Line 69
	mov	edx, edi
	xor	eax, 1952801890				; 74656462H
	xor	edx, 1819895653				; 6c796765H
; Line 73
	cmp	DWORD PTR _data$[ebp], ecx
	je	SHORT $LN28@shp
$LL23@shp:
; Line 75
	mov	ebx, DWORD PTR _in$[ebp]
	xor	eax, DWORD PTR [ebx]
	push	2
	pop	ebx
$LL20@shp:
; Line 78
	add	edi, esi
	rol	esi, 5
	xor	esi, edi
	add	edx, eax
	rol	eax, 8
	xor	eax, edx
	rol	edi, 16					; 00000010H
	add	edi, eax
	rol	eax, 7
	add	edx, esi
	xor	eax, edi
	rol	esi, 13					; 0000000dH
	xor	esi, edx
	rol	edx, 16					; 00000010H
	dec	ebx
	jne	SHORT $LL20@shp
; Line 80
	mov	ebx, DWORD PTR _in$[ebp]
	add	DWORD PTR _in$[ebp], 4
	xor	edi, DWORD PTR [ebx]
	cmp	DWORD PTR _in$[ebp], ecx
	jne	SHORT $LL23@shp
$LN28@shp:
; Line 83
	dec	DWORD PTR _left$[ebp]
	js	SHORT $LN13@shp
	mov	ecx, DWORD PTR _left$[ebp]
	shl	ecx, 3
	mov	DWORD PTR tv403[ebp], ecx
$LL14@shp:
; Line 84
	mov	ecx, DWORD PTR _in$[ebp]
	mov	ebx, DWORD PTR _left$[ebp]
	movzx	ebx, BYTE PTR [ebx+ecx]
	mov	ecx, DWORD PTR tv403[ebp]
	sub	DWORD PTR tv403[ebp], 8
	shl	ebx, cl
	or	DWORD PTR _b$[ebp], ebx
	dec	DWORD PTR _left$[ebp]
	cmp	DWORD PTR _left$[ebp], 0
	jge	SHORT $LL14@shp
$LN13@shp:
; Line 87
	xor	eax, DWORD PTR _b$[ebp]
	push	2
	pop	ebx
$LL12@shp:
; Line 90
	add	edi, esi
	add	edx, eax
	mov	ecx, esi
	rol	ecx, 5
	xor	ecx, edi
	rol	eax, 8
	xor	eax, edx
	rol	edi, 16					; 00000010H
	add	edi, eax
	rol	eax, 7
	add	edx, ecx
	xor	eax, edi
	rol	ecx, 13					; 0000000dH
	xor	ecx, edx
	rol	edx, 16					; 00000010H
	dec	ebx
	mov	esi, ecx
	jne	SHORT $LL12@shp
; Line 92
	xor	edi, DWORD PTR _b$[ebp]
	push	4
; Line 93
	xor	edx, 255				; 000000ffH
	pop	ebx
$LL6@shp:
; Line 96
	add	edi, esi
	add	edx, eax
	mov	ecx, esi
	rol	ecx, 5
	xor	ecx, edi
	rol	eax, 8
	xor	eax, edx
	rol	edi, 16					; 00000010H
	add	edi, eax
	rol	eax, 7
	add	edx, ecx
	xor	eax, edi
	rol	ecx, 13					; 0000000dH
	xor	ecx, edx
	rol	edx, 16					; 00000010H
	dec	ebx
	mov	esi, ecx
	jne	SHORT $LL6@shp
; Line 98
	pop	edi
	xor	eax, esi
	pop	esi
	pop	ebx
; Line 99
	leave
	ret	0
_shp	ENDP
_TEXT	ENDS
END
