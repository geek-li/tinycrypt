; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\odzhan\tinycrypt\hash\md5\md5.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_MD5_Transform
; Function compile flags: /Ogspy
;	COMDAT _MD5_Transform
_TEXT	SEGMENT
_tc$ = -344						; size = 256
_sigma$ = -88						; size = 64
_rotg$ = -24						; size = 4
_rotf$ = -20						; size = 4
_s$ = -16						; size = 4
_roti$ = -12						; size = 4
_roth$ = -8						; size = 4
_b$ = -4						; size = 4
_a$ = 8							; size = 4
_ctx$ = 8						; size = 4
_MD5_Transform PROC					; COMDAT
; File c:\odzhan\tinycrypt\hash\md5\md5.c
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
; Line 59
	mov	DWORD PTR _rotf$[ebp], 370215943	; 16110c07H
; Line 60
	mov	DWORD PTR _rotg$[ebp], 336464133	; 140e0905H
; Line 61
	mov	DWORD PTR _roth$[ebp], 386927364	; 17100b04H
; Line 62
	mov	DWORD PTR _roti$[ebp], 353307142	; 150f0a06H
; Line 65
	mov	DWORD PTR _sigma$[ebp], 50462976	; 03020100H
	mov	DWORD PTR _sigma$[ebp+4], 117835012	; 07060504H
	mov	DWORD PTR _sigma$[ebp+8], 185207048	; 0b0a0908H
	mov	DWORD PTR _sigma$[ebp+12], 252579084	; 0f0e0d0cH
; Line 66
	mov	DWORD PTR _sigma$[ebp+16], 722433	; 000b0601H
	mov	DWORD PTR _sigma$[ebp+20], 68094469	; 040f0a05H
	mov	DWORD PTR _sigma$[ebp+24], 134417929	; 08030e09H
	mov	DWORD PTR _sigma$[ebp+28], 201785869	; 0c07020dH
; Line 67
	mov	DWORD PTR _sigma$[ebp+32], 235603973	; 0e0b0805H
	mov	DWORD PTR _sigma$[ebp+36], 168231937	; 0a070401H
	mov	DWORD PTR _sigma$[ebp+40], 100859917	; 0603000dH
	mov	DWORD PTR _sigma$[ebp+44], 34540553	; 020f0c09H
; Line 68
	mov	DWORD PTR _sigma$[ebp+48], 84805376	; 050e0700H
	mov	DWORD PTR _sigma$[ebp+52], 17433356	; 010a030cH
	mov	DWORD PTR _sigma$[ebp+56], 218500872	; 0d060f08H
	mov	DWORD PTR _sigma$[ebp+60], 151128836	; 09020b04H
; Line 72
	mov	DWORD PTR _tc$[ebp], -680876936		; d76aa478H
	mov	DWORD PTR _tc$[ebp+4], -389564586	; e8c7b756H
	mov	DWORD PTR _tc$[ebp+8], 606105819	; 242070dbH
	mov	DWORD PTR _tc$[ebp+12], -1044525330	; c1bdceeeH
; Line 73
	mov	DWORD PTR _tc$[ebp+16], -176418897	; f57c0fafH
	mov	DWORD PTR _tc$[ebp+20], 1200080426	; 4787c62aH
	mov	DWORD PTR _tc$[ebp+24], -1473231341	; a8304613H
	mov	DWORD PTR _tc$[ebp+28], -45705983	; fd469501H
; Line 74
	mov	DWORD PTR _tc$[ebp+32], 1770035416	; 698098d8H
	mov	DWORD PTR _tc$[ebp+36], -1958414417	; 8b44f7afH
	mov	DWORD PTR _tc$[ebp+40], -42063		; ffff5bb1H
	mov	DWORD PTR _tc$[ebp+44], -1990404162	; 895cd7beH
; Line 75
	mov	DWORD PTR _tc$[ebp+48], 1804603682	; 6b901122H
	mov	DWORD PTR _tc$[ebp+52], -40341101	; fd987193H
	mov	DWORD PTR _tc$[ebp+56], -1502002290	; a679438eH
	mov	DWORD PTR _tc$[ebp+60], 1236535329	; 49b40821H
; Line 76
	mov	DWORD PTR _tc$[ebp+64], -165796510	; f61e2562H
	mov	DWORD PTR _tc$[ebp+68], -1069501632	; c040b340H
	mov	DWORD PTR _tc$[ebp+72], 643717713	; 265e5a51H
	mov	DWORD PTR _tc$[ebp+76], -373897302	; e9b6c7aaH
; Line 77
	mov	DWORD PTR _tc$[ebp+80], -701558691	; d62f105dH
	mov	DWORD PTR _tc$[ebp+84], 38016083	; 02441453H
	mov	DWORD PTR _tc$[ebp+88], -660478335	; d8a1e681H
	mov	DWORD PTR _tc$[ebp+92], -405537848	; e7d3fbc8H
; Line 78
	mov	DWORD PTR _tc$[ebp+96], 568446438	; 21e1cde6H
	mov	DWORD PTR _tc$[ebp+100], -1019803690	; c33707d6H
	mov	DWORD PTR _tc$[ebp+104], -187363961	; f4d50d87H
	mov	DWORD PTR _tc$[ebp+108], 1163531501	; 455a14edH
; Line 79
	mov	DWORD PTR _tc$[ebp+112], -1444681467	; a9e3e905H
	mov	DWORD PTR _tc$[ebp+116], -51403784	; fcefa3f8H
	mov	DWORD PTR _tc$[ebp+120], 1735328473	; 676f02d9H
	mov	DWORD PTR _tc$[ebp+124], -1926607734	; 8d2a4c8aH
; Line 80
	mov	DWORD PTR _tc$[ebp+128], -378558	; fffa3942H
	mov	DWORD PTR _tc$[ebp+132], -2022574463	; 8771f681H
	mov	DWORD PTR _tc$[ebp+136], 1839030562	; 6d9d6122H
	mov	DWORD PTR _tc$[ebp+140], -35309556	; fde5380cH
; Line 81
	mov	DWORD PTR _tc$[ebp+144], -1530992060	; a4beea44H
	mov	DWORD PTR _tc$[ebp+148], 1272893353	; 4bdecfa9H
	mov	DWORD PTR _tc$[ebp+152], -155497632	; f6bb4b60H
	mov	DWORD PTR _tc$[ebp+156], -1094730640	; bebfbc70H
; Line 82
	mov	DWORD PTR _tc$[ebp+160], 681279174	; 289b7ec6H
	mov	DWORD PTR _tc$[ebp+164], -358537222	; eaa127faH
	mov	DWORD PTR _tc$[ebp+168], -722521979	; d4ef3085H
	mov	DWORD PTR _tc$[ebp+172], 76029189	; 04881d05H
; Line 83
	mov	DWORD PTR _tc$[ebp+176], -640364487	; d9d4d039H
	mov	DWORD PTR _tc$[ebp+180], -421815835	; e6db99e5H
	mov	DWORD PTR _tc$[ebp+184], 530742520	; 1fa27cf8H
	mov	DWORD PTR _tc$[ebp+188], -995338651	; c4ac5665H
; Line 84
	mov	DWORD PTR _tc$[ebp+192], -198630844	; f4292244H
	mov	DWORD PTR _tc$[ebp+196], 1126891415	; 432aff97H
	mov	DWORD PTR _tc$[ebp+200], -1416354905	; ab9423a7H
	mov	DWORD PTR _tc$[ebp+204], -57434055	; fc93a039H
; Line 85
	mov	DWORD PTR _tc$[ebp+208], 1700485571	; 655b59c3H
	mov	DWORD PTR _tc$[ebp+212], -1894986606	; 8f0ccc92H
	mov	DWORD PTR _tc$[ebp+216], -1051523	; ffeff47dH
	mov	DWORD PTR _tc$[ebp+220], -2054922799	; 85845dd1H
; Line 86
	mov	DWORD PTR _tc$[ebp+224], 1873313359	; 6fa87e4fH
	mov	DWORD PTR _tc$[ebp+228], -30611744	; fe2ce6e0H
; Line 90
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [eax]
; Line 92
	mov	ebx, DWORD PTR [eax+8]
; Line 93
	mov	edi, DWORD PTR [eax+12]
	mov	DWORD PTR _a$[ebp], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _tc$[ebp+232], -1560198380	; a3014314H
	mov	DWORD PTR _tc$[ebp+236], 1309151649	; 4e0811a1H
	mov	DWORD PTR _tc$[ebp+240], -145523070	; f7537e82H
	mov	DWORD PTR _tc$[ebp+244], -1120210379	; bd3af235H
	mov	DWORD PTR _tc$[ebp+248], 718787259	; 2ad7d2bbH
	mov	DWORD PTR _tc$[ebp+252], -343485551	; eb86d391H
	mov	DWORD PTR _b$[ebp], edx
; Line 95
	xor	esi, esi
$LL14@MD5_Transf:
; Line 102
	mov	ecx, esi
	and	ecx, 3
	cmp	esi, 16					; 00000010H
	jae	SHORT $LN6@MD5_Transf
	movzx	ecx, BYTE PTR _rotf$[ebp+ecx]
	mov	DWORD PTR _s$[ebp], ecx
; Line 103
	mov	ecx, edi
	xor	ecx, ebx
	and	ecx, DWORD PTR _b$[ebp]
	xor	ecx, edi
	jmp	SHORT $LN15@MD5_Transf
$LN6@MD5_Transf:
; Line 104
	cmp	esi, 32					; 00000020H
	jae	SHORT $LN4@MD5_Transf
; Line 105
	movzx	ecx, BYTE PTR _rotg$[ebp+ecx]
	mov	DWORD PTR _s$[ebp], ecx
; Line 106
	mov	ecx, ebx
	xor	ecx, DWORD PTR _b$[ebp]
	and	ecx, edi
	jmp	SHORT $LN16@MD5_Transf
$LN4@MD5_Transf:
; Line 107
	cmp	esi, 48					; 00000030H
	jae	SHORT $LN2@MD5_Transf
; Line 108
	movzx	ecx, BYTE PTR _roth$[ebp+ecx]
	mov	DWORD PTR _s$[ebp], ecx
; Line 109
	mov	ecx, edi
	xor	ecx, ebx
	xor	ecx, DWORD PTR _b$[ebp]
; Line 110
	jmp	SHORT $LN15@MD5_Transf
$LN2@MD5_Transf:
; Line 111
	movzx	ecx, BYTE PTR _roti$[ebp+ecx]
	mov	DWORD PTR _s$[ebp], ecx
; Line 112
	mov	ecx, edi
	not	ecx
	or	ecx, DWORD PTR _b$[ebp]
$LN16@MD5_Transf:
	xor	ecx, ebx
$LN15@MD5_Transf:
	add	DWORD PTR _a$[ebp], ecx
; Line 117
	movzx	ecx, BYTE PTR _sigma$[ebp+esi]
	mov	edx, DWORD PTR [eax+ecx*4+16]
	add	edx, DWORD PTR _tc$[ebp+esi*4]
	mov	ecx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _a$[ebp]
; Line 118
	mov	DWORD PTR _a$[ebp], edi
	rol	edx, cl
; Line 119
	mov	edi, ebx
; Line 120
	mov	ebx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _b$[ebp]
	inc	esi
; Line 121
	mov	DWORD PTR _b$[ebp], edx
	cmp	esi, 64					; 00000040H
	jb	$LL14@MD5_Transf
; Line 124
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 125
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edx
	mov	DWORD PTR [eax+4], ecx
; Line 126
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, ebx
	mov	DWORD PTR [eax+8], ecx
; Line 127
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, edi
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+12], ecx
	pop	ebx
; Line 128
	leave
	ret	0
_MD5_Transform ENDP
_TEXT	ENDS
PUBLIC	_MD5_Init
; Function compile flags: /Ogspy
;	COMDAT _MD5_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_MD5_Init PROC						; COMDAT
; Line 136
	mov	eax, DWORD PTR _c$[esp-4]
	and	DWORD PTR [eax+80], 0
	and	DWORD PTR [eax+84], 0
; Line 137
	mov	DWORD PTR [eax], 1732584193		; 67452301H
; Line 138
	mov	DWORD PTR [eax+4], -271733879		; efcdab89H
; Line 139
	mov	DWORD PTR [eax+8], -1732584194		; 98badcfeH
; Line 140
	mov	DWORD PTR [eax+12], 271733878		; 10325476H
; Line 141
	ret	0
_MD5_Init ENDP
_TEXT	ENDS
PUBLIC	_MD5_Update
; Function compile flags: /Ogspy
;	COMDAT _MD5_Update
_TEXT	SEGMENT
_p$ = -4						; size = 4
_c$ = 8							; size = 4
_r$ = 12						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_MD5_Update PROC					; COMDAT
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 152
	mov	ecx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _p$[ebp], eax
	test	ecx, ecx
	je	SHORT $LN10@MD5_Update
; Line 155
	push	ebx
	mov	ebx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [ebx+80]
	and	eax, 63					; 0000003fH
; Line 158
	add	DWORD PTR [ebx+80], ecx
	adc	DWORD PTR [ebx+84], 0
; Line 160
	test	ecx, ecx
	je	SHORT $LN13@MD5_Update
	push	esi
	push	edi
	jmp	SHORT $LN3@MD5_Update
$LL12@MD5_Update:
	mov	ecx, DWORD PTR _len$[ebp]
$LN3@MD5_Update:
; Line 161
	push	64					; 00000040H
	pop	edx
	sub	edx, eax
	mov	DWORD PTR _r$[ebp], ecx
	cmp	ecx, edx
	jb	SHORT $LN8@MD5_Update
	mov	DWORD PTR _r$[ebp], edx
$LN8@MD5_Update:
; Line 162
	mov	edx, DWORD PTR _r$[ebp]
	mov	esi, DWORD PTR _p$[ebp]
	mov	ecx, edx
; Line 163
	add	edx, eax
	lea	edi, DWORD PTR [ebx+eax+16]
	rep movsb
	cmp	edx, 64					; 00000040H
	jb	SHORT $LN14@MD5_Update
; Line 165
	push	ebx
	call	_MD5_Transform
	pop	ecx
; Line 166
	mov	ecx, DWORD PTR _r$[ebp]
	sub	DWORD PTR _len$[ebp], ecx
; Line 168
	add	DWORD PTR _p$[ebp], ecx
	xor	eax, eax
	cmp	DWORD PTR _len$[ebp], eax
	ja	SHORT $LL12@MD5_Update
$LN14@MD5_Update:
	pop	edi
	pop	esi
$LN13@MD5_Update:
	pop	ebx
$LN10@MD5_Update:
; Line 170
	leave
	ret	0
_MD5_Update ENDP
_TEXT	ENDS
PUBLIC	_MD5_Final
; Function compile flags: /Ogspy
;	COMDAT _MD5_Final
_TEXT	SEGMENT
_dgst$ = 8						; size = 4
_c$ = 12						; size = 4
_MD5_Final PROC						; COMDAT
; Line 178
	push	ebx
	push	esi
; Line 180
	mov	esi, DWORD PTR _c$[esp+4]
	mov	edx, DWORD PTR [esi+80]
	push	edi
	and	edx, 63					; 0000003fH
; Line 181
	push	64					; 00000040H
	lea	ebx, DWORD PTR [edx+esi+16]
	pop	ecx
	sub	ecx, edx
	xor	al, al
	mov	edi, ebx
	rep stosb
; Line 183
	mov	BYTE PTR [ebx], 128			; 00000080H
; Line 185
	cmp	edx, 56					; 00000038H
	jb	SHORT $LN1@MD5_Final
; Line 186
	push	esi
	call	_MD5_Transform
	pop	ecx
; Line 187
	push	64					; 00000040H
	lea	edi, DWORD PTR [esi+16]
	xor	al, al
	pop	ecx
	rep stosb
$LN1@MD5_Final:
; Line 190
	mov	eax, DWORD PTR [esi+80]
	mov	ecx, DWORD PTR [esi+84]
	shld	ecx, eax, 3
	shl	eax, 3
; Line 192
	push	esi
	mov	DWORD PTR [esi+72], eax
	mov	DWORD PTR [esi+76], ecx
	call	_MD5_Transform
; Line 194
	mov	edi, DWORD PTR _dgst$[esp+12]
	pop	ecx
	push	16					; 00000010H
	pop	ecx
	rep movsb
	pop	edi
	pop	esi
	pop	ebx
; Line 195
	ret	0
_MD5_Final ENDP
_TEXT	ENDS
END
